/**********************************************************************
 * Extern for Matter
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Matter = {
  "name": {},
  "version": {},
  "uses": {},
  "used": {},
  "use": function () {},
  "before": function () {},
  "after": function () {},
  "Axes": {
    "fromVertices": function () {},
    "rotate": function () {}
  },
  "Bodies": {
    "rectangle": function () {},
    "trapezoid": function () {},
    "circle": function () {},
    "polygon": function () {},
    "fromVertices": function () {}
  },
  "Body": {
    "_inertiaScale": {},
    "_nextCollidingGroupId": {},
    "_nextNonCollidingGroupId": {},
    "_nextCategory": {},
    "create": function () {},
    "nextGroup": function () {},
    "nextCategory": function () {},
    "set": function () {},
    "setStatic": function () {},
    "setMass": function () {},
    "setDensity": function () {},
    "setInertia": function () {},
    "setVertices": function () {},
    "setParts": function () {},
    "setPosition": function () {},
    "setAngle": function () {},
    "setVelocity": function () {},
    "setAngularVelocity": function () {},
    "translate": function () {},
    "rotate": function () {},
    "scale": function () {},
    "update": function () {},
    "applyForce": function () {}
  },
  "Composite": {
    "create": function () {},
    "setModified": function () {},
    "add": function () {},
    "remove": function () {},
    "addComposite": function () {},
    "removeComposite": function () {},
    "removeCompositeAt": function () {},
    "addBody": function () {},
    "removeBody": function () {},
    "removeBodyAt": function () {},
    "addConstraint": function () {},
    "removeConstraint": function () {},
    "removeConstraintAt": function () {},
    "clear": function () {},
    "allBodies": function () {},
    "allConstraints": function () {},
    "allComposites": function () {},
    "get": function () {},
    "move": function () {},
    "rebase": function () {},
    "translate": function () {},
    "rotate": function () {},
    "scale": function () {}
  },
  "World": {
    "create": function () {},
    "add": function () {},
    "remove": function () {},
    "addComposite": function () {},
    "addBody": function () {},
    "addConstraint": function () {},
    "clear": function () {}
  },
  "Contact": {
    "create": function () {},
    "id": function () {}
  },
  "Detector": {
    "collisions": function () {},
    "canCollide": function () {}
  },
  "Grid": {
    "create": function () {},
    "update": function () {},
    "clear": function () {}
  },
  "Pairs": {
    "create": function () {},
    "update": function () {},
    "removeOld": function () {},
    "clear": function () {}
  },
  "Pair": {
    "create": function () {},
    "update": function () {},
    "setActive": function () {},
    "id": function () {}
  },
  "Query": {
    "ray": function () {},
    "region": function () {},
    "point": function () {}
  },
  "Resolver": {
    "_restingThresh": {},
    "_restingThreshTangent": {},
    "_positionDampen": {},
    "_positionWarming": {},
    "_frictionNormalMultiplier": {},
    "preSolvePosition": function () {},
    "solvePosition": function () {},
    "postSolvePosition": function () {},
    "preSolveVelocity": function () {},
    "solveVelocity": function () {}
  },
  "SAT": {
    "collides": function () {}
  },
  "Constraint": {
    "create": function () {},
    "solveAll": function () {},
    "solve": function () {},
    "postSolveAll": function () {}
  },
  "MouseConstraint": {
    "create": function () {},
    "update": function () {}
  },
  "Common": {
    "_nextId": {},
    "_seed": {},
    "extend": function () {},
    "clone": function () {},
    "keys": function () {},
    "values": function () {},
    "get": function () {},
    "set": function () {},
    "shadeColor": function () {},
    "shuffle": function () {},
    "choose": function () {},
    "isElement": function () {},
    "isArray": function () {},
    "isFunction": function () {},
    "isPlainObject": function () {},
    "isString": function () {},
    "clamp": function () {},
    "sign": function () {},
    "now": function () {},
    "random": function () {},
    "colorToNumber": function () {},
    "logLevel": {},
    "log": function () {},
    "info": function () {},
    "warn": function () {},
    "nextId": function () {},
    "indexOf": function () {},
    "map": function () {},
    "topologicalSort": function () {},
    "chain": function () {},
    "chainPathBefore": function () {},
    "chainPathAfter": function () {}
  },
  "Engine": {
    "create": function () {},
    "update": function () {},
    "merge": function () {},
    "clear": function () {},
    "run": function () {}
  },
  "Events": {
    "on": function () {},
    "off": function () {},
    "trigger": function () {}
  },
  "Mouse": {
    "create": function () {},
    "setElement": function () {},
    "clearSourceEvents": function () {},
    "setOffset": function () {},
    "setScale": function () {}
  },
  "Runner": {
    "create": function () {},
    "run": function () {},
    "tick": function () {},
    "stop": function () {},
    "start": function () {}
  },
  "Sleeping": {
    "_motionWakeThreshold": {},
    "_motionSleepThreshold": {},
    "_minBias": {},
    "update": function () {},
    "afterCollisions": function () {},
    "set": function () {}
  },
  "Plugin": {
    "_registry": {},
    "register": function () {},
    "resolve": function () {},
    "toString": function () {},
    "isPlugin": function () {},
    "isUsed": function () {},
    "isFor": function () {},
    "use": function () {},
    "dependencies": function () {},
    "dependencyParse": function () {},
    "versionParse": function () {},
    "versionSatisfies": function () {}
  },
  "Composites": {
    "stack": function () {},
    "chain": function () {},
    "mesh": function () {},
    "pyramid": function () {},
    "newtonsCradle": function () {},
    "car": function () {},
    "softBody": function () {}
  },
  "Bounds": {
    "create": function () {},
    "update": function () {},
    "contains": function () {},
    "overlaps": function () {},
    "translate": function () {},
    "shift": function () {}
  },
  "Svg": {
    "pathToVertices": function () {}
  },
  "Vector": {
    "create": function () {},
    "clone": function () {},
    "magnitude": function () {},
    "magnitudeSquared": function () {},
    "rotate": function () {},
    "rotateAbout": function () {},
    "normalise": function () {},
    "dot": function () {},
    "cross": function () {},
    "cross3": function () {},
    "add": function () {},
    "sub": function () {},
    "mult": function () {},
    "div": function () {},
    "perp": function () {},
    "neg": function () {},
    "angle": function () {},
    "_temp": {}
  },
  "Vertices": {
    "create": function () {},
    "fromPath": function () {},
    "centre": function () {},
    "mean": function () {},
    "area": function () {},
    "inertia": function () {},
    "translate": function () {},
    "rotate": function () {},
    "contains": function () {},
    "scale": function () {},
    "chamfer": function () {},
    "clockwiseSort": function () {},
    "isConvex": function () {},
    "hull": function () {}
  },
  "Render": {
    "create": function () {},
    "run": function () {},
    "stop": function () {},
    "setPixelRatio": function () {},
    "lookAt": function () {},
    "startViewTransform": function () {},
    "endViewTransform": function () {},
    "world": function () {},
    "debug": function () {},
    "constraints": function () {},
    "bodyShadows": function () {},
    "bodies": function () {},
    "bodyWireframes": function () {},
    "bodyConvexHulls": function () {},
    "vertexNumbers": function () {},
    "mousePosition": function () {},
    "bodyBounds": function () {},
    "bodyAxes": function () {},
    "bodyPositions": function () {},
    "bodyVelocity": function () {},
    "bodyIds": function () {},
    "collisions": function () {},
    "separations": function () {},
    "grid": function () {},
    "inspector": function () {}
  },
  "RenderPixi": {
    "create": function () {},
    "run": function () {},
    "stop": function () {},
    "clear": function () {},
    "setBackground": function () {},
    "world": function () {},
    "constraint": function () {},
    "body": function () {}
  }
};
/**********************************************************************
 * End Generated Extern for Matter
/**********************************************************************/

// The way properties are handled they don't get picked up
// Created a list of them all with 
//  egrep "^var.*{};|@property .*" matter.js
// ... then some manual editting!

Object.assign(Matter.MouseConstriant, {
    "type":{},
    "mouse":{},
    "body":{},
    "constraint":{},
    "collisionFilter":{}
});

Object.assign(Matter.Mouse, {
    "element": {
      "getAttribute": function () {},
      "addEventListener": function () {},
      "removeEventListener": function () {},
      "getBoundingClientRect": function () {},
      "width":{},
      "height":{},
      "clientWidth":{},
      "clientHeight":{}
    },
    "absolute": {
      "x": {}, 
      "y": {} 
    },
    "position": {
      "x": {}, 
      "y": {}
    },
    "mousedownPosition": {
      "x": {}, 
      "y": {} 
    },
    "mouseupPosition": {
      "x": {}, 
      "y": {} 
    },
    "offset": {
      "x": {}, 
      "y": {} 
    },
    "scale": {
      "x": {}, 
      "y": {} 
    },
    "wheelDelta" :{},
    "button" :{},
    "pixelRatio" :{},
    
    "mousewheel": function () {},
    "mouemove": function () {},
    "mouseup": function () {},
    "mousedown": function () {}
});


Object.assign(Matter.Body,{
  "id":{},
  "type":{},
  "label":{},
  "parts":{},
  "plugin":{},
  "parent":{},
  "angle":{},
  "vertices":{},
  "position":{
    "x":{},
    "y":{},
  },
  "force":{},
  "torque":{},
  "speed":{},
  "angularSpeed":{},
  "velocity":{},
  "angularVelocity":{},
  "isStatic":{},
  "isSensor":{},
  "isSleeping":{},
  "motion":{},
  "sleepThreshold":{},
  "density":{},
  "mass":{},
  "inverseMass":{},
  "inertia":{},
  "inverseInertia":{},
  "restitution":{},
  "friction":{},
  "frictionStatic":{},
  "frictionAir":{},
  "collisionFilter":{},
  "collisionFilter.group":{},
  "collisionFilter.category":{},
  "collisionFilter.mask":{},
  "slop":{},
  "timeScale":{},
  "render":{
    "visible":{},
    "opacity":{},
    "lineWidth":{},
    "fillStyle":{},
    "strokeStyle":{},
    "sprite":{
      "texture":{},
      "xScale":{},
      "yScale":{},
      "xOffset":{},
      "yOffset":{}
    }
  },
  "axes":{},
  "area":{},
  "bounds":{}
});

Object.assign(Matter.Composite,{
  "id":{},
  "type":{},
  "label":{},
  "isModified":{},
  "parent":{},
  "bodies":{},
  "constraints":{},
  "composites":{},
  "plugin":{}
});

Object.assign(Matter.World,{
  "gravity":{
    "x":{},
    "y":{},
    "scale":{},
  },
  "bounds":{}
});

Object.assign(Matter.Grid,{
  "bucketWidth":{},
  "bucketHeight":{}
});
Object.assign(Matter.Constraint,{
  "id":{},
  "type":{},
  "label":{},
  "render":{
    "visible":{},
    "lineWidth":{},
    "strokeStyle":{}
  },
  "bodyA":{},
  "bodyB":{},
  "pointA":{
    "x":{},
    "y":{}
  },
  "pointB":{
    "x":{},
    "y":{}
  },
  "angleA":{},
  "angleB":{},
  "stiffness":{},
  "length":{},
  "plugin":{}
});

Object.assign(Matter.Common,{
  "Common.logLevel":{}
});

Object.assign(Matter.Engine,{
  "positionIterations":{},
  "velocityIterations":{},
  "constraintIterations":{},
  "enableSleeping":{},
  "timing":{},
  "timing.timeScale":{},
  "timing.timestamp":{},
  "render":{},
  "broadphase":{},
  "world":{},
  "plugin":{}
});

Object.assign(Matter.Runner,{
  "enabled":{},
  "isFixed":{},
  "delta":{}
});

Object.assign(Matter.Render,{
  "controller":{},
  "engine":{},
  "element":{},
  "canvas":{},
  "options":{},
  "options.width":{},
  "options.height":{},
  "options.hasBounds":{},
  "bounds":{},
  "context":{},
  "textures":{}
});

